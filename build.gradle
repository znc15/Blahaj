plugins {
	id 'eclipse'
	id 'idea'
	id 'maven-publish'
	id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

archivesBaseName = project.archives_base_name
version = file('../version.txt').text.trim()
group = project.maven_group

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft {

	mappings channel: 'official', version: '1.20.1'

	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

	runs {
		client {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'

			mods {
				blahaj {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'

			mods {
				blahaj {
					source sourceSets.main
				}
			}
		}
	}
}

// 添加依赖
dependencies {
	minecraft "net.minecraftforge:forge:1.20.1-47.2.0"
}

// 处理资源文件
processResources {
	inputs.property "version", version

	filesMatching('META-INF/mods.toml') {
		expand "version": version
	}
}

// Java编译选项
tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
	options.release = 17
}

// Jar任务配置
jar {
	manifest {
		attributes([
			"Specification-Title"     : "blahaj",
			"Specification-Vendor"    : "blahaj",
			"Specification-Version"   : "1",
			"Implementation-Title"    : project.name,
			"Implementation-Version"  : version,
			"Implementation-Vendor"   : "blahaj",
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}

	// 添加LICENSE文件
	from("../LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
	from "../common"
}

// 发布配置
publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact jar
		}
	}
	repositories {
		maven {
			// 添加你的Maven仓库配置
		}
	}
}

// 这确保我们在构建时使用正确的编码
tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
}

idea {
	module {
		inheritOutputDirs = true
	}
}

repositories {
	maven { url 'https://maven.parchmentmc.org' }
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java']
		}
	}
}
